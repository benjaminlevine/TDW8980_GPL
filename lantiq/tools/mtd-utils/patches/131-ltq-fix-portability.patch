Index: mtd-20090505/include/mtd/ubi-media.h
===================================================================
--- mtd-20090505.orig/include/mtd/ubi-media.h	2011-07-07 02:10:47.000000000 +0530
+++ mtd-20090505/include/mtd/ubi-media.h	2011-07-07 02:13:25.174329762 +0530
@@ -34,7 +34,7 @@
 typedef uint8_t __u8;
 typedef uint16_t __be16;
 typedef uint32_t __be32;
-typedef uint64_t __be64;
+typedef uint64_t __be64i;
 
 /* The version of UBI images supported by this implementation */
 #define UBI_VERSION 1
@@ -153,7 +153,7 @@
 	__be32  magic;
 	__u8    version;
 	__u8    padding1[3];
-	__be64  ec; /* Warning: the current limit is 31-bit anyway! */
+	__be64i  ec; /* Warning: the current limit is 31-bit anyway! */
 	__be32  vid_hdr_offset;
 	__be32  data_offset;
 	__u8    padding2[36];
@@ -283,7 +283,7 @@
 	__be32  data_pad;
 	__be32  data_crc;
 	__u8    padding2[4];
-	__be64  sqnum;
+	__be64i  sqnum;
 	__u8    padding3[12];
 	__be32  hdr_crc;
 } __attribute__ ((packed));
Index: mtd-20090505/mkfs.ubifs/ubifs-media.h
===================================================================
--- mtd-20090505.orig/mkfs.ubifs/ubifs-media.h	2011-07-07 02:16:24.000000000 +0530
+++ mtd-20090505/mkfs.ubifs/ubifs-media.h	2011-07-07 02:18:31.634329854 +0530
@@ -35,7 +35,7 @@
 
 typedef uint16_t __le16;
 typedef uint32_t __le32;
-typedef uint64_t __le64;
+typedef uint64_t __le64i;
 
 
 /* UBIFS node magic number (must not have the padding byte first or last) */
@@ -399,7 +399,7 @@
 struct ubifs_ch {
 	__le32 magic;
 	__le32 crc;
-	__le64 sqnum;
+	__le64i sqnum;
 	__le32 len;
 	__u8 node_type;
 	__u8 group_type;
@@ -417,7 +417,7 @@
  */
 union ubifs_dev_desc {
 	__le32 new;
-	__le64 huge;
+	__le64i huge;
 } __attribute__ ((packed));
 
 /**
@@ -458,11 +458,11 @@
 struct ubifs_ino_node {
 	struct ubifs_ch ch;
 	__u8 key[UBIFS_MAX_KEY_LEN];
-	__le64 creat_sqnum;
-	__le64 size;
-	__le64 atime_sec;
-	__le64 ctime_sec;
-	__le64 mtime_sec;
+	__le64i creat_sqnum;
+	__le64i size;
+	__le64i atime_sec;
+	__le64i ctime_sec;
+	__le64i mtime_sec;
 	__le32 atime_nsec;
 	__le32 ctime_nsec;
 	__le32 mtime_nsec;
@@ -498,7 +498,7 @@
 struct ubifs_dent_node {
 	struct ubifs_ch ch;
 	__u8 key[UBIFS_MAX_KEY_LEN];
-	__le64 inum;
+	__le64i inum;
 	__u8 padding1;
 	__u8 type;
 	__le16 nlen;
@@ -543,8 +543,8 @@
 	struct ubifs_ch ch;
 	__le32 inum;
 	__u8 padding[12]; /* Watch 'zero_trun_node_unused()' if changing! */
-	__le64 old_size;
-	__le64 new_size;
+	__le64i old_size;
+	__le64i new_size;
 } __attribute__ ((packed));
 
 /**
@@ -596,7 +596,7 @@
 	__le32 leb_size;
 	__le32 leb_cnt;
 	__le32 max_leb_cnt;
-	__le64 max_bud_bytes;
+	__le64i max_bud_bytes;
 	__le32 log_lebs;
 	__le32 lpt_lebs;
 	__le32 orph_lebs;
@@ -608,7 +608,7 @@
 	__u8 padding1[2];
 	__le32 rp_uid;
 	__le32 rp_gid;
-	__le64 rp_size;
+	__le64i rp_size;
 	__le32 time_gran;
 	__u8 uuid[16];
 	__u8 padding2[3972];
@@ -650,8 +650,8 @@
  */
 struct ubifs_mst_node {
 	struct ubifs_ch ch;
-	__le64 highest_inum;
-	__le64 cmt_no;
+	__le64i highest_inum;
+	__le64i cmt_no;
 	__le32 flags;
 	__le32 log_lnum;
 	__le32 root_lnum;
@@ -660,12 +660,12 @@
 	__le32 gc_lnum;
 	__le32 ihead_lnum;
 	__le32 ihead_offs;
-	__le64 index_size;
-	__le64 total_free;
-	__le64 total_dirty;
-	__le64 total_used;
-	__le64 total_dead;
-	__le64 total_dark;
+	__le64i index_size;
+	__le64i total_free;
+	__le64i total_dirty;
+	__le64i total_used;
+	__le64i total_dead;
+	__le64i total_dark;
 	__le32 lpt_lnum;
 	__le32 lpt_offs;
 	__le32 nhead_lnum;
@@ -732,7 +732,7 @@
  */
 struct ubifs_cs_node {
 	struct ubifs_ch ch;
-	__le64 cmt_no;
+	__le64i cmt_no;
 } __attribute__ ((packed));
 
 /**
@@ -743,8 +743,8 @@
  */
 struct ubifs_orph_node {
 	struct ubifs_ch ch;
-	__le64 cmt_no;
-	__le64 inos[];
+	__le64i cmt_no;
+	__le64i inos[];
 } __attribute__ ((packed));
 
 #endif /* __UBIFS_MEDIA_H__ */
Index: mtd-20090505/mkfs.ubifs/defs.h
===================================================================
--- mtd-20090505/mkfs.ubifs/defs.h	2009-06-05 20:29:08.000000000 +0530
+++ mtd-20090505.ltq_patched/mkfs.ubifs/defs.h	2011-07-08 17:58:52.355579805 +0530
@@ -23,7 +23,7 @@
 
 #define cpu_to_le16(x) ((__le16){t16(x)})
 #define cpu_to_le32(x) ((__le32){t32(x)})
-#define cpu_to_le64(x) ((__le64){t64(x)})
+#define cpu_to_le64(x) ((__le64i){t64(x)})
 
 #define le16_to_cpu(x) (t16((x)))
 #define le32_to_cpu(x) (t32((x)))
